<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_header_footer">
    <sp_header_footer action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$rootScope,$location, $http) {
  /* widget controller */
  var c = this;
	
	var s = $location.search();
	
	$scope.logout = function(){
		window.location.href="/logout.do";
	}
	
	$scope.getMissingSurvey = function(){
		//console.log('calculate');
		var pm = new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_naci_survey/partnership_program_survey/getMissingSurvey',
				 method : "GET",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 params: {}
			}).then(resolve, reject);
		});
		pm.then(function(rs){
			var result = rs.data.result;
			c.data.missingList = result;
			//c.data.message = result;
			$scope.$apply();
			$('#resultDiv').modal('show');
		},function(error){
			console.log(error);
		})
	}
	
	$scope.exportResult2Excel = function(){
		console.log('export');
		var pm = new Promise(function(resolve, reject){
			$http({
				 url: '/api/x_naci_survey/partnership_program_survey/getAllSurvey',
				 method : "GET",
				 beforeSend: function(xhr){ xhr.setRequestHeader('X-UserToken', sessionId); },
				 headers: {'Content-Type': 'application/json'},
				 params: {}
			}).then(resolve, reject);
		});
		pm.then(function(rs){
			var result = rs.data.result;
			console.log(result);
			var list = result.list;
			var metadata = result.metadata;
			var headerRow = [];
			var help = {};
			help.doc = metadata.doc;
			help.submit_for = metadata.submit_for;
			help.partnership = metadata.partnership;
			help.relationship = metadata.relationship;
			help.supply_document = metadata.supply_document;
			help.other_organization = metadata.other_organization;
			help.specifics = metadata.specifics;
			help.renewal = metadata.renewal;
			help.renewal_specify = metadata.renewal_specify;
			help.foa = metadata.foa;
			help.foa_specify = metadata.foa_specify;
			help.clearance = metadata.clearance;
			help.clearance_specify = metadata.clearance_specify;
			help.risk = metadata.risk;
			help.risk_document = metadata.risk_document;
			help.study_design = metadata.study_design;
			help.design_document = metadata.design_document;
			help.intellectual = metadata.intellectual;
			help.contribution = metadata.contribution;
			help.interventional = metadata.interventional;
			help.risk_assessed = metadata.risk_assessed;
			help.entity = metadata.entity;
			help.monetary = metadata.monetary;
			help.amount = metadata.amount;
			help.amount_type = metadata.amount_type;
			help.no_assets = metadata.no_assets;
			help.industry_scrutiny = metadata.industry_scrutiny;
			help.industry_use = metadata.industry_use;
			help.industry_use_specify = metadata.industry_use_specify;
			help.nonprofit_scrutiny = metadata.nonprofit_scrutiny;
			help.nonprofit_aim = metadata.nonprofit_aim;
			help.nonprofit_aim_specify = metadata.nonprofit_aim_specify;
			help.participate = metadata.participate;
			help.solicitation = metadata.solicitation;
			help.advisory = metadata.advisory;
			help.advisory_specify = metadata.advisory_specify;
			help.confidential_detail = metadata.confidential_detail;
			help.confidential_specify = metadata.confidential_specify;
			help.complaints = metadata.complaints;
			help.complaints_specify = metadata.complaints_specify;
			help.involved = metadata.involved;
			help.disclosure = metadata.disclosure;
			help.management = metadata.management;
			help.communicate = metadata.communicate;
			help.communicate_specify = metadata.communicate_specify;
			help.inequitable_treatment = metadata.inequitable_treatment;
			help.inequitable_treatment_specify = metadata.inequitable_treatment_specify;
			headerRow.push(help);
		
			var ws = XLSX.utils.json_to_sheet(headerRow, {skipHeader: true});
			
			var data = [];
			list.forEach(function(row){
				var dict = {};
				dict.doc = row.doc;
				dict.submit_for = row.submit_for;
				dict.partnership = row.partnership;
				dict.relationship = row.relationship;
				dict.supply_document = row.supply_document;
				dict.other_organization = row.other_organization;
				dict.specifics = row.specifics;
				dict.renewal = row.renewal;
				dict.renewal_specify = row.renewal_specify;
				dict.foa = row.foa;
				dict.foa_specify = row.foa_specify;
				dict.clearance = row.clearance;
				dict.clearance_specify = row.clearance_specify;
				dict.risk = row.risk;
				dict.risk_document = row.risk_document;
				dict.study_design = row.study_design;
				dict.design_document = row.design_document;
				dict.intellectual = row.intellectual == "true" ? "Yes" : "No";
				dict.contribution = row.contribution;
				dict.interventional = row.interventional == "true" ? "Yes" : "No";
				dict.risk_assessed = row.risk_assessed;
				dict.entity = row.entit == "true" ? "Yes" : "No";
				dict.monetary = row.monetary == "true" ? "Yes" : "No";
				dict.amount = row.amount;
				dict.amount_type = row.amount_type;
				dict.no_assets = row.no_assets == "true" ? "Yes" : "No";
				dict.industry_scrutiny = row.industry_scrutiny;
				dict.industry_use = row.industry_use;
				dict.industry_use_specify = row.industry_use_specify;
				dict.nonprofit_scrutiny = row.nonprofit_scrutiny;
				dict.nonprofit_aim = row.nonprofit_aim;
				dict.nonprofit_aim_specify = row.nonprofit_aim_specify;
				dict.participate = row.participate;
				dict.solicitation = row.solicitation;
				dict.advisory = row.advisory;
				dict.advisory_specify = row.advisory_specify;
				dict.confidential_detail = row.confidential_detail;
				dict.confidential_specify = row.confidential_specify;
				dict.complaints = row.complaints;
				dict.complaints_specify = row.complaints_specify;
				dict.involved = row.involved;
				dict.disclosure = row.disclosure;
				dict.management = row.management;
				dict.communicate = row.communicate;
				dict.communicate_specify = row.communicate_specify;
				dict.inequitable_treatment = row.inequitable_treatment;
				dict.inequitable_treatment_specify = row.inequitable_treatment_specify;
				data.push(dict);
			});
			
			XLSX.utils.sheet_add_json(ws, data, {skipHeader: true, origin: "A2"});

			/* add to workbook */
			var wb = XLSX.utils.book_new();
			XLSX.utils.book_append_sheet(wb, ws, "Survey Report");

			/* write workbook and force a download */
			var today = new Date();
			var dd = today.getDate();
			var mm = today.getMonth()+1;
			var yyyy = today.getFullYear();

			if(dd<10) {
					dd = '0'+dd
			} 

			if(mm<10) {
					mm = '0'+mm
			} 

			today = yyyy + "-"+ mm + "-" + dd;
			XLSX.writeFile(wb, "Survey_report_"+today+".xlsx");
			
		},function(error){
			console.log(error);
		})
	}
	
	c.closeResultBox = function(){
		$('#resultDiv').modal('hide');
		
	}
	
	//console.log(c.data.doc);
	
	$rootScope.user = {};
	$rootScope.user.role = c.data.role;
	$rootScope.user.doc = c.data.doc;
	$rootScope.user.info = {};
	$rootScope.user.info.name = c.data.userName;
	$rootScope.user.info.id =c.data.userId;
}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link/>
        <name>survey header</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	data.userName = gs.getUserDisplayName();
	data.sessionId = gs.getSession().getSessionToken();
	var user_sys_id = gs.getUserID();
	data.userId = user_sys_id;
	data.role = [];
	data.doc = '-';
	var gr= new GlideRecord('sys_user');
		gr.addQuery('sys_id',user_sys_id);
	gr.query();
	gr.next();
	data.doc = gr.getDisplayValue('u_long_org_division');
    data.role.push('ru');
    if(gs.getUser().isMemberOf('NCI_Survey_Report_Group')){
		data.role.push('su');
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_header_footer</sys_class_name>
        <sys_created_by>yuw5@nih.gov</sys_created_by>
        <sys_created_on>2019-02-11 22:20:10</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>295177f1dbe3e70054d8ff621f96194d</sys_id>
        <sys_mod_count>43</sys_mod_count>
        <sys_name>survey header</sys_name>
        <sys_package display_value="Partnership program process survey" source="x_naci_survey">c3cce779dbeb6b00b86770c08c96191e</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Partnership program process survey">c3cce779dbeb6b00b86770c08c96191e</sys_scope>
        <sys_update_name>sp_header_footer_295177f1dbe3e70054d8ff621f96194d</sys_update_name>
        <sys_updated_by>yuw5@nih.gov</sys_updated_by>
        <sys_updated_on>2019-02-13 14:53:46</sys_updated_on>
        <template><![CDATA[<div id="survey-header" style="min-width:1020px;">
  <div id="survey-logo">
    <div class="col-md-2"></div>
    <div class="col-md-8 logo">
      <img ng-src="842ca96adbce93c0f59974131f96197f.iix" role="presentation" alt="Portal Logo" class="nci-logo" src="842ca96adbce93c0f59974131f96197f.iix">
    </div>
    <div class="col-md-2"></div>
  </div>
  <div id="survey-nav">
    <div class="col-md-2"></div>
    <div class="col-md-8 details"> 
      Survey for Public-Private Partnerships and Program Processes 
      <div class="userInfo-block">
        <div uib-dropdown>
          <span class="userInfo-text" uib-dropdown-toggle>
            {{c.data.userName}} <i class="fa fa-caret-down" style="font-size:16px;margin-left:10px;"></i>
          </span>
          <ul class="dropdown-menu-right" uib-dropdown-menu role="menu">
            <li role="menuitem" ng-if="c.data.role.indexOf('su') >= 0"><a href="#" ng-click="getMissingSurvey();">Missing Survey</a></li>
            <li role="menuitem" ng-if="c.data.role.indexOf('su') >= 0"><a href="#" ng-click="exportResult2Excel();">Excel Report</a></li>
            <li class="divider" ng-if="c.data.role.indexOf('su') >= 0"></li>
            <li role="menuitem"><a href="javascript:void(0);" ng-click="logout();">Sign Out</a></li>
          </ul>
        </div>
      </div>
    </div>
    <div class="col-md-2"></div>
  </div>
</div>
<div id="resultDiv" class="modal fade" data-keyborad="false" data-backdrop="static">
    <div class="modal-dialog modal-lg" style="width:20%;">
        <div class="modal-content" style="height:400px; overflow-y:auto; overflow-x: hidden;">
            <div class="modal-header">
                 Information Dialog
            </div>
            <div class="col-md-12 message-box" id="messageContent">
              Total missing: {{c.data.missingList.length}}
              <table class="table-striped" width="100%">
                <tr>
                  <th width="60%">
                    Name
                	</th>
                  <th width="40%">
                    Institute/Center
                	</th>
                </tr>
                <tr ng-repeat="row in c.data.missingList">
                  <td>{{row.name}}</td>
                  <td>{{row.ic}}</td>
                </tr>
              </table>
            </div>
            <div class="col-md-12" align="center">
              <button class="btn btn-primary" ng-click="c.closeMessageBox();" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>]]></template>
    </sp_header_footer>
</record_update>
